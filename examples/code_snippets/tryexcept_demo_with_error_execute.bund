//
// Demonstration of try/except conditional
//

//
// First, we are creating ?try conditional
//

//
// Put some data to the stack, for a demonstration of stack display
//
"Some data in the stack"
42
3.14
?try
  //
  // This is a TRY block. It will be executed and if there
  // is an error, EXCEPT block will be executed
  //
  :try {
    "I am raising an exception. Because I can" raise
  } set
  //
  // This is EXCEPT block. If there is an error, TRY block will pass
  // ?error conditional in the stack
  //
  :except {
    "I am in EXCEPT block"  // Print a nice message on where we are
          println
    !                       // Just executing the ERROR conditional that in the stack
  } set
  //
  // Associated lambda. Will be passed with ?error conditional
  //
  :associated {
    "I am associated lambda" println
  } set
  //
  // Recovery lambda. Will be executed after except
  //
  :recovery {
    "I am a RECOVERY lambda" println
  } set
!
