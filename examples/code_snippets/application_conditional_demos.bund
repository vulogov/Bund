//
// In this snippet I will demonstrate all conditional
// execution
//

//
// Upon execution, this conditional runs lambda function
// registered on :run key of the conditional
//
"Example 1: Your default conditional" println
? :run {
  "Hello world!"
} set !
"Example 1: You simple conditional returns: {0}" format println

//
// This conditional act similar to the ?true* function, but
// aestetically different
//
"Example 2: Your IF/THEN/ELSE conditional" println
?ifthenelse
  :if { "Example 2: IF returns TRUE" println true } set
  :then { "Example 2: You IF conditional returns: TRUE" println } set
  :else { "Example 2: You IF conditional returns: FALSE" println } set
!

"Example 3: Your IF/THEN/ELSE conditional" println
?ifthenelse
  :if { "Example 3: IF returns FALSE" println false } set
  :then { "Example 3: You IF conditional returns: TRUE" println } set
  :else { "Example 3: You IF conditional returns: FALSE" println } set
!

//
// This is a classin try {} except {} conditional. If :try lambda function throws
// an exception, and conditional executes lambda function registered on :except key
//
"Example 4: Your TRY/EXCEPT conditional" println
?try
  :try {
        "Raising an exception" println
        "Example 4: Exception" raise
  } set
  :except {
        "Example 4: exception handler engaged for '{0}'" format println
  } set
!

"Example 5: Your TRY/EXCEPT conditional without exception" println
?try
  :try {
        41 1 + "Innocent computation of {0}" format println
  } set
  :except {
        "Example 5: exception handler engaged for '{0}'" format println
  } set
!
